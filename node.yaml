#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/etcd-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:4001/v2/machines; do sleep 2; done
  - path: /opt/bin/docker-cache-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:5000; do sleep 2; done
  - path: /opt/bin/kube-apiserver-waiter.sh
    owner: root
    content: |
      #! /usr/bin/bash
      until curl http://172.17.8.101:8080; do sleep 2; done
coreos:
  fleet:
    public-ip: $public_ipv4
    etcd_servers: http://172.17.8.101:4001
    metadata: "role=minion"
  flannel:
    interface: eth1
  units:
    - name: etcd.service
      mask: true
    - name: etcd-waiter.service
      command: start
      content: |
        [Unit]
        Description=etcd waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/etcd-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/etcd-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: docker-cache-waiter.service
      command: start
      content: |
        [Unit]
        Description=docker cache waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/docker-cache-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/docker-cache-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: kube-apiserver-waiter.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server waiter
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/kube-apiserver-waiter.sh
        RemainAfterExit=true
        Type=oneshot
    - name: fleet.service
      command: start
      content: |
        [Unit]
        Description=fleet daemon
        Wants=fleet.socket
        After=fleet.socket
        Wants=etcd-waiter.service
        After=etcd-waiter.service

        [Service]
        ExecStart=/usr/bin/fleetd
        Restart=always
        RestartSec=10s
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: flannel.service
      command: start
      content: |
        [Unit]
        Requires=setup-network-environment.service
        After=setup-network-environment.service
        Wants=etcd-waiter.service
        After=etcd-waiter.service

        [Service]
        Type=notify
        ExecStartPre=/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/flanneld
        ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld
        ExecStart=/opt/bin/flanneld --iface=eth1 --etcd-endpoints http://172.17.8.101:4001
    - name: docker.service
      command: start
      content: |
        [Unit]
        After=flannel.service
        Wants=flannel.service
        Requires=docker-cache-waiter.service
        After=docker-cache-waiter.service
        Description=Docker Application Container Engine
        Documentation=http://docs.docker.io

        [Service]
        EnvironmentFile=/run/flannel/subnet.env
        ExecStartPre=/bin/mount --make-rprivate /
        ExecStart=/usr/bin/docker --registry-mirror=http://172.17.8.101:5000 -d --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} -s=overlay -H fd://

        [Install]
        WantedBy=multi-user.target
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver-waiter.service
        After=kube-apiserver-waiter.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
        --master=172.17.8.101:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver-waiter.service
        After=kube-apiserver-waiter.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__RELEASE__/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
        --address=0.0.0.0 \
        --port=10250 \
        --hostname_override=$public_ipv4 \
        --api_servers=172.17.8.101:8080 \
        --allow_privileged=true \
        --cadvisor_port=4194 \
        --cluster_dns=10.100.0.10 \
        --cluster_domain=pires-kube \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: rpc-statd.service
      command: start
      enable: true
  update:
    group: __CHANNEL__
    reboot-strategy: off